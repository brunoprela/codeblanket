export const combinatoricsCountingQuiz = [
  {
    id: 'cc-q-1',
    question:
      'Citadel interview: "A trading desk has 8 traders who need to cover 8 different asset classes (equities, FX, commodities, etc.). However, 2 traders are specialists who must cover equities and FX respectively. How many ways can you assign the remaining traders to asset classes?" Walk through: (1) your initial approach, (2) the systematic counting, (3) how you would verify your answer, (4) what if those 2 specialists could swap their assignments as well?',
    sampleAnswer:
      'Complete assignment problem: (1) Initial approach: This is a constrained permutation problem. We have 8 traders and 8 asset classes, with 2 traders pre-assigned. Key insight: fix the constraints first, then count remaining permutations. (2) Systematic counting: Step 1: Assign the 2 specialists to equities and FX (fixed assignment). Step 2: Remaining: 6 traders and 6 asset classes. These can be assigned in any order. Count: 6! = 720 ways. Verification of logic: Total unrestricted ways = 8! = 40,320. If 2 traders are fixed in positions, then we only permute the remaining 6, giving 6! = 720. (3) Verification methods: Method A (simulation): Generate all 8! permutations, filter for those with trader 1 in position "equities" and trader 2 in position "FX", count results → should get 720. Method B (combinatorial check): P(8,8) with 2 positions fixed = P(6,6) = 6! = 720 ✓. Method C (small example): Try with 3 traders, 3 classes, 1 fixed. Total = 3! = 6. With 1 fixed: 2! = 2. Manual enumeration confirms. (4) If specialists can swap: Now we have 2 scenarios: (Scenario A) Specialist 1 → equities, Specialist 2 → FX: 6! ways. (Scenario B) Specialist 1 → FX, Specialist 2 → equities: 6! ways. Total: 2 × 6! = 1,440 ways. Alternatively: Choose which 2 positions (equities, FX) the specialists occupy = 2! ways, then arrange remaining 6 traders = 6!. Total: 2! × 6! = 2 × 720 = 1,440 ✓. Interview communication: state the constraints clearly, fix known positions first, count free positions, offer verification via smaller example or simulation.',
    keyPoints: [
      'Fix specialists first: 2 traders assigned to specific classes',
      'Remaining permutation: 6 traders to 6 classes = 6! = 720',
      'If specialists can swap: multiply by 2! → 1,440 ways',
      'Verification: use small example (n=3) to check logic',
      'General principle: constrain first, then count free choices',
    ],
  },
  {
    id: 'cc-q-2',
    question:
      'Jane Street interview: "You have a portfolio of 20 stocks: 12 large-cap, 8 small-cap. You need to select 6 stocks such that you have at least 3 large-cap and at least 2 small-cap. How many valid portfolios? Then, if you must select exactly 4 large-cap and exactly 2 small-cap, how many ways? Finally, generalize the formula for n large-cap, m small-cap, selecting k total with min requirements L large and S small." Provide complete case analysis and general formula derivation.',
    sampleAnswer:
      'Complete portfolio selection analysis: (1) At least 3 large, at least 2 small, total 6 stocks: Need: L ≥ 3, S ≥ 2, L + S = 6. Valid cases: (L=3, S=3), (L=4, S=2). Cannot have (L=5, S=1) because S < 2. Cannot have (L=2, S=4) because L < 3. Case 1 (L=3, S=3): C(12,3) × C(8,3) = 220 × 56 = 12,320. Case 2 (L=4, S=2): C(12,4) × C(8,2) = 495 × 28 = 13,860. Total: 12,320 + 13,860 = 26,180 valid portfolios. Verification by complement: Total unrestricted = C(20,6) = 38,760. Subtract invalid cases: (L < 3 or S < 2). Invalid: (L=0), (L=1), (L=2), (S=0), (S=1). This gets complex with overlaps, so direct case enumeration is cleaner. (2) Exactly 4 large, exactly 2 small: C(12,4) × C(8,2) = 495 × 28 = 13,860 ways. (3) General formula: Given n large-cap, m small-cap, select k total with L_min large and S_min small. Constraints: L + S = k, L ≥ L_min, S ≥ S_min. Valid range: max(L_min, k - m) ≤ L ≤ min(n, k - S_min). For each valid L, S = k - L. Formula: Sum over valid L: Σ C(n, L) × C(m, k - L) for L in [max(L_min, k-m), min(n, k-S_min)]. Example validation: n=12, m=8, k=6, L_min=3, S_min=2. Range for L: max(3, 6-8) = max(3, -2) = 3 to min(12, 6-2) = min(12, 4) = 4. So L ∈ {3, 4}. Sum: C(12,3)×C(8,3) + C(12,4)×C(8,2) = 12,320 + 13,860 = 26,180 ✓. Interview communication: enumerate cases systematically, verify bounds carefully, generalize to formula with clear constraints, check edge cases.',
    keyPoints: [
      'Valid cases: (L=3,S=3) and (L=4,S=2), cannot violate minimums',
      'Case 1: C(12,3)×C(8,3) = 12,320; Case 2: C(12,4)×C(8,2) = 13,860',
      'Total: 26,180 valid portfolios',
      'General formula: Σ C(n,L)×C(m,k-L) over valid L range',
      'Valid L range: max(L_min, k-m) to min(n, k-S_min)',
    ],
  },
  {
    id: 'cc-q-3',
    question:
      'Two Sigma interview: "In a limit order book, buy and sell orders arrive in sequence. A valid sequence must never have more sells processed than buys (to maintain balanced inventory). For n=6 buy orders and n=6 sell orders, how many valid sequences exist? Explain why this is a Catalan number. Then, if we require at least 2 buy orders before any sell order, how does the count change? Provide both analytical solution and simulation validation."',
    sampleAnswer:
      'Complete order book sequence problem: (1) Valid sequences for n=6: This is the classic Catalan number problem. Reasoning: represent buy as "(" and sell as ")". A valid sequence is a properly matched parentheses string. For n=6: C(6) = C(12,6)/(6+1) = 924/7 = 132 valid sequences. Why Catalan: At any point in the sequence, cumulative buys ≥ cumulative sells. This is equivalent to: number of "(" seen so far ≥ number of ")" seen. This is the definition of Catalan numbers: valid parentheses matchings. Alternative derivation: Total sequences of 6 buys and 6 sells = C(12,6) = 924. Invalid sequences: those where at some point sells > buys. By reflection principle: every invalid sequence can be mapped to a sequence with 7 sells and 5 buys. Count of invalid = C(12,7) = C(12,5) = 792. Valid = 924 - 792 = 132. Wait, that doesn\'t match. Let me reconsider: Using reflection principle correctly: invalid sequences cross the line "sells = buys + 1". Reflect the portion after first crossing. This maps to sequences with (n-1) buys and (n+1) sells. Invalid count = C(2n, n-1) = C(12,5) = 792. Valid = C(12,6) - C(12,5) = 924 - 792 = 132 ✓. This equals C(6) = 132 ✓. (2) At least 2 buy orders before any sell: Modified constraint: first 2 orders must be buys (BB...). After the initial BB, we have 4 buys and 6 sells remaining. These must form a valid sequence (never more sells than buys). Count: We need sequences of 4 buys and 6 sells where sells never exceed buys. Wait, but we\'ve already used 2 buys, so cumulative is: at any point after BB, (2 + buys_so_far) ≥ sells_so_far. Equivalently: buys_so_far ≥ sells_so_far - 2. This is NOT a standard Catalan. Let me rethink: After BB, we have 4 buys (B) and 6 sells (S). Valid sequences must satisfy: for any prefix, #B + 2 ≥ #S (because we started with 2 buys). Reframe: let #B\' = #B + 2. Then we need #B\' ≥ #S always. At the end, #B\' = 4+2=6, #S=6, so #B\'=#S. This is equivalent to finding sequences of 4 B\'s and 6 S\'s where... wait, I\'m confusing myself. Better approach: After initial BB, the 10 remaining orders (4B, 6S) must form a sequence where "buys ahead by at least 2" is maintained. Actually, since we start +2, we can tolerate up to 2 more sells than buys in the remaining sequence without violating. Count = number of sequences of 4 buys and 6 sells where cumulative sells - buys ≤ 2 always. Using ballot problem / Catalan generalization: this is C(10, 6, 2) = "voting sequences where candidate A (buys) leads candidate B (sells) by at least -2 after accounting for initial +2 lead, and never goes below 0 overall". Formula: Generalized ballot: sequences where path from (0,2) to (4,6) never crosses y=x. Count = C(10,6) - C(10,7) = 210 - 120 = 90. Wait, C(10,7) doesn\'t make sense (can\'t choose 7 from 10 when only 6 are sells). Let me reconsider with reflection principle. Actually, this is getting complex. For interview, I\'d say: "After the initial 2 buys, we need to count lattice paths from (2,0) to (6,6) that don\'t cross the diagonal. This is a generalized Catalan-like problem. The count is C(10,4) - C(10,3) using reflection = 210 - 120 = 90." Or use simulation to verify. (3) Simulation validation: Generate all C(12,6)=924 sequences of 6 B\'s and 6 S\'s. Filter for: (a) standard Catalan (buys always ≥ sells), (b) first 2 are buys AND buys always ≥ sells. Count both. Expected: (a) 132, (b) some smaller number. Interview: explain Catalan clearly, show reflection principle, acknowledge modified constraint is harder, offer simulation.',
    keyPoints: [
      'Standard constraint (buys ≥ sells always): Catalan number C(6) = 132',
      'Catalan formula: C(n) = C(2n,n)/(n+1)',
      'Reflection principle: invalid sequences map to C(12,5) = 792',
      'Valid = C(12,6) - C(12,5) = 924 - 792 = 132',
      'Modified constraint (first 2 must be buys): use generalized ballot or simulation',
    ],
  },
];
