export const optionsTradingStrategiesQuiz = [
  {
    id: 'options-trading-strategies-q-1',
    question:
      'Design a "strategy recommendation engine" that analyzes market conditions and suggests the optimal options strategy. The system should: (1) Accept inputs: stock price, IV rank, market outlook (bullish/bearish/neutral), risk tolerance, (2) Calculate expected profit/loss for 10+ strategies, (3) Rank strategies by risk-adjusted return (Sharpe-like metric), (4) Generate specific trade recommendations with strikes and quantities, (5) Provide risk metrics: max loss, breakeven points, probability of profit. Implement this system and explain the decision logic for strategy selection.',
    sampleAnswer:
      "Strategy Recommendation Engine: **System Architecture**: Inputs: Stock price, IV Rank, Market outlook (-2 to +2: very bearish to very bullish), Volatility expectation, Risk tolerance (conservative/moderate/aggressive), Account size. Decision logic: Match outlook + IV regime → strategy universe, Calculate expected value for each strategy, Risk-adjust returns, Rank and recommend top 3. **Strategy Universe**: Bullish strategies: Long call (unlimited upside), Bull call spread (defined risk), Short put (collect premium), Covered call (income on stock). Bearish strategies: Long put (unlimited downside), Bear put spread (defined risk), Short call (with hedge), Protective put (hedge). Neutral strategies: Iron condor, Butterfly spread, Calendar spread, Short strangle. Volatility strategies: Long straddle (low IV), Short straddle (high IV), Long strangle, Short strangle. **Implementation**: def recommend_strategy(stock_price, iv_rank, outlook, vol_expectation, risk_tolerance, account_size): # Filter strategies by outlook; if outlook > 0.5: # Bullish; candidate_strategies = ['long_call', 'bull_call_spread', 'short_put']; elif outlook < -0.5: # Bearish; candidate_strategies = ['long_put', 'bear_put_spread']; else: # Neutral; candidate_strategies = ['iron_condor', 'butterfly', 'calendar']; # Further filter by IV rank; if iv_rank > 75: # High IV - prefer selling; candidate_strategies = [s for s in candidate_strategies if 'short' in s or 'iron' in s or 'butterfly' in s]; elif iv_rank < 25: # Low IV - prefer buying; candidate_strategies = [s for s in candidate_strategies if 'long' in s]; # Calculate expected value for each; recommendations = []; for strategy in candidate_strategies: ev, max_loss, max_profit, prob_profit = calculate_strategy_metrics(strategy, stock_price, iv_rank); sharpe_like = ev / max_loss if max_loss > 0 else 0; recommendations.append({'strategy': strategy, 'expected_value': ev, 'sharpe': sharpe_like, 'max_loss': max_loss, 'max_profit': max_profit, 'prob_profit': prob_profit}); # Sort by risk-adjusted return; recommendations.sort(key=lambda x: x['sharpe'], reverse=True); return recommendations[:3]. **Strategy Metrics Calculation**: def calculate_strategy_metrics(strategy_name, stock_price, iv_rank): if strategy_name == 'long_call': strike = stock_price × 1.02; # 2% OTM; premium = calculate_option_price(stock_price, strike, 'call'); prob_profit = calculate_probability_above(stock_price + premium); max_loss = premium × 100; max_profit = float('inf'); expected_value = (prob_profit × 10 × premium) - ((1-prob_profit) × premium); # Simplified; return expected_value, max_loss, max_profit, prob_profit; elif strategy_name == 'bull_call_spread': long_strike = stock_price; short_strike = stock_price × 1.05; net_debit = 3.0; # Calculate from prices; prob_profit = calculate_probability_above(long_strike + net_debit); max_loss = net_debit × 100; max_profit = (short_strike - long_strike - net_debit) × 100; expected_value = (prob_profit × max_profit) - ((1-prob_profit) × max_loss); return expected_value, max_loss, max_profit, prob_profit; # Similar for other strategies.... **Probability of Profit**: Use delta as proxy for probability ITM: def calculate_probability_above(target_price): d1 = calculate_d1(stock_price, target_price, T, sigma, r); prob = norm.cdf(d1); return prob. Or Monte Carlo simulation: def monte_carlo_probability(stock_price, target, days, sigma, simulations=10000): returns = np.random.normal(0, sigma/np.sqrt(252), (simulations, days)); price_paths = stock_price × np.exp(np.cumsum(returns, axis=1)); final_prices = price_paths[:, -1]; prob_above = np.mean(final_prices > target); return prob_above. **Example Output**: Stock: AAPL at $150, IV Rank: 82%, Outlook: +1 (moderately bullish), Vol expectation: decreasing, Risk tolerance: moderate. System output: Recommendation #1: Short Put, Strike: $145 (3.3% OTM), Premium: $3.50, Max Profit: $350, Max Loss: $14,150, Probability of Profit: 68%, Expected Value: $125, Sharpe-like: 0.009, Rationale: High IV rank favors premium selling; bullish outlook supports put selling; moderate OTM provides buffer. Recommendation #2: Bull Call Spread, Long: $150, Short: $155, Net Debit: $2.50, Max Profit: $250, Max Loss: $250, Probability of Profit: 52%, Expected Value: $5, Sharpe-like: 0.02, Rationale: Defined risk for moderate tolerance; benefits from upward move; lower cost than naked call. Recommendation #3: Covered Call (if owns stock), Sell: $155 call, Premium: $2.00, Max Profit: $700 (premium + $5 gain), Max Loss: Unlimited (stock ownership), Probability of Profit: 75%, Rationale: Generate income; willing to cap upside at $155. **Risk Metrics**: For each recommendation, calculate: Breakeven points: For short put $145, breakeven = $145 - $3.50 = $141.50. Delta exposure: Net delta of position. Theta (daily decay): How much position gains/loses per day. Vega exposure: Sensitivity to IV changes. **Position Sizing**: Based on risk tolerance: Conservative: Risk 2% of account, Moderate: Risk 5%, Aggressive: Risk 10%. Quantity = (Account × risk_pct) / max_loss. Example: $100K account, moderate (5%), short put max loss $14,150, Quantity = 0.05 × $100K / $14,150 ≈ 0.35 contracts → Trade 1 contract (risks $14K = 14% if assigned, but probability low). **Advanced Features**: IV surface analysis: Check if specific strikes mispriced vs surface. Correlation: If trading multiple underlyings, account for correlation. Event awareness: Flag if earnings within expiration window (avoid or adjust). Historical backtesting: Show how strategy performed historically in similar conditions. **Decision Logic Summary**: High IV Rank + Bullish = Short put or bull put spread. High IV Rank + Bearish = Short call spread or bear call spread. Low IV Rank + Bullish = Long call or bull call spread. Low IV Rank + Bearish = Long put or bear put spread. Neutral + High IV = Iron condor or short strangle. Neutral + Low IV = Calendar spread or long iron butterfly.",
    keyPoints: [
      'Strategy selection: Match outlook + IV rank to strategy universe (e.g., high IV bullish → short put)',
      'Expected value: Calculate as prob_profit × max_profit - prob_loss × max_loss for each strategy',
      'Risk-adjusted ranking: Use Sharpe-like metric (EV / max_loss) to compare strategies',
      'Position sizing: Risk 2-10% of account depending on tolerance; quantity = account × risk% / max_loss',
      'Probability of profit: Use delta as proxy or Monte Carlo simulation; typically 60-70% for credit spreads',
    ],
  },
  {
    id: 'options-trading-strategies-q-2',
    question:
      'Compare and contrast "Bull Call Spread" vs "Short Put" for a moderately bullish outlook. For each strategy: (1) Calculate P&L at different stock prices, (2) Analyze Greeks (delta, theta, vega), (3) Determine breakeven and max profit/loss, (4) Assess capital requirements, (5) Evaluate which is better in high vs low IV regimes. Provide specific numerical examples and explain when to choose each.',
    sampleAnswer:
      "Bull Call Spread vs Short Put Comparison: **Setup Assumptions**: Stock: $100, Bullish outlook (expect $105+ in 30 days), Risk-free rate: 5%. **BULL CALL SPREAD**: Trade: Buy 100-strike call for $5, Sell 105-strike call for $2. Net Debit: $3. **P&L Analysis**: Stock at expiration: $95: Long call = $0, short call = $0, P&L = -$3 (max loss). $100: P&L = -$3. $103: Long = $3, short = $0, P&L = $3 - $3 = $0 (breakeven). $105: Long = $5, short = $0, P&L = $5 - $3 = $2 (max profit). $110: Long = $10, short = -$5, P&L = $10 - $5 - $3 = $2. Breakeven: $103. Max Profit: $2 (at $105+). Max Loss: $3 (at $100 or below). **Greeks**: Delta: Long call ≈ 0.50, short call ≈ 0.30, Net delta ≈ 0.20. Theta: Negative (losing time value), ≈ -$0.05/day. Vega: Slightly positive (long more vega than short), ≈ +$0.03/1% IV. **Capital Required**: $300 (net debit × 100). Margin: None (defined risk). **SHORT PUT**: Trade: Sell 95-strike put for $2. Net Credit: $2. **P&L Analysis**: Stock at expiration: $85: Put assigned, loss = ($95-$85) - $2 = -$8. $90: Loss = ($95-$90) - $2 = -$3. $93: Loss = ($95-$93) - $2 = $0 (breakeven). $95: Put expires worthless, profit = $2 (max). $100: Profit = $2. $110: Profit = $2. Breakeven: $93. Max Profit: $2 (at $95+). Max Loss: $93 per share (if stock → $0), or $9,300 total. **Greeks**: Delta: ≈ +0.30 (short put = positive delta). Theta: Positive (gaining time value), ≈ +$0.08/day. Vega: Negative (short vol), ≈ -$0.15/1% IV. **Capital Required**: $9,500 cash-secured (or $2,000 margin). Much higher than bull call spread! **COMPARISON TABLE**: | Metric | Bull Call Spread | Short Put | |--------|------------------|----------| | Net Cost | $300 debit | $200 credit | | Max Profit | $200 | $200 | | Max Loss | $300 | $9,300 | | Breakeven | $103 | $93 | | Delta | +0.20 | +0.30 | | Theta | -$0.05 | +$0.08 | | Vega | +$0.03 | -$0.15 | | Capital | $300 | $9,500 | | Return on Risk | 67% | 2.1% |. **High IV Regime (IV Rank > 75%)**: Winner: SHORT PUT. Why? Theta positive (benefit from decay), Vega negative (benefit from IV crush), Collect inflated premium ($2 is rich at high IV). Even though capital-intensive, return on margin (2.1%) is attractive for 30 days (25% annualized). **Low IV Regime (IV Rank < 25%)**: Winner: BULL CALL SPREAD. Why? Buying options while cheap (low IV), Limited capital requirement ($300 vs $9,500), Higher return on capital (67% vs 2.1%). Vega positive (benefit if IV expands). **Which to Choose?**: Choose BULL CALL SPREAD if: Lower capital available, Want defined, small risk, IV is low (buying cheap options), Don't want assignment risk. Choose SHORT PUT if: Have capital (or margin), IV is high (selling rich premium), Comfortable owning stock at strike if assigned, Want positive theta. **Advanced Consideration**: Adjustments: Bull call spread: Can roll up strikes if stock rallies. Short put: Can roll down/out if stock drops, or take assignment and sell calls. Assignment: Bull call spread: No assignment risk (both sides long/short calls). Short put: Risk of assignment if ITM → must buy stock at strike. Tax efficiency: Bull call spread: Capital gains/losses. Short put: If assigned → stock basis, then capital gains on stock sale. **Real-World Example**: Stock: NVDA at $500, IV Rank: 85% (high). Bull Call Spread: Buy 500 call ($30), sell 520 call ($18), debit = $12, Capital: $1,200, Max profit: $800 (67% return). Short Put: Sell 480 put ($15), Capital: $48,000 cash-secured, Max profit: $1,500 (3.1% return). With high IV, the short put is attractive for its theta and vega profile, but requires 40× the capital. For retail trader with $10K account, the bull call spread is more practical.",
    keyPoints: [
      'Bull call spread: Lower capital ($300), defined risk, negative theta, slightly positive vega',
      'Short put: Higher capital ($9,500), undefined risk, positive theta, negative vega',
      'High IV regime: Prefer short put (collect inflated premium, benefit from IV crush)',
      'Low IV regime: Prefer bull call spread (buy cheap options, limited capital)',
      'Return on capital: Bull call spread 67% vs short put 2.1%, but short put has higher win probability',
    ],
  },
  {
    id: 'options-trading-strategies-q-3',
    question:
      'Design an "Iron Condor trading system" for monthly income generation. The system should: (1) Screen for high IV rank stocks (> 50%), (2) Calculate optimal strikes (sell at 1 standard deviation, buy at 2 SD for wings), (3) Target specific credit amount and risk/reward ratio, (4) Implement adjustment rules if stock approaches sold strikes, (5) Track performance: win rate, average profit/loss, max drawdown, (6) Backtest on historical data. Explain iron condor mechanics, when they profit, and how to manage risk.',
    sampleAnswer:
      "Iron Condor System Design: **Iron Condor Mechanics**: Structure: 4 legs, all same expiration: Sell OTM put (e.g., $95), Buy further OTM put (e.g., $90) - protection, Sell OTM call (e.g., $105), Buy further OTM call (e.g., $110) - protection. Net: Credit received (e.g., $2.00). Max Profit: Credit received (if stock stays between sold strikes). Max Loss: Wing spread - credit (e.g., $5 - $2 = $3). **When Iron Condors Profit**: Stock stays between sold strikes ($95-$105), Time decay works in your favor (theta positive), Implied volatility contracts (vega negative). Probability of profit: Typically 60-70% if selling at 1 SD. **Stock Screening**: Criteria: IV Rank > 50% (preferably > 70%), Liquid options (bid-ask spread < 10% of premium), Market cap > $10B (avoid low liquidity), Avoid earnings announcements within expiration. Implementation: def screen_stocks(universe, min_iv_rank=50): candidates = []; for ticker in universe: iv_rank = calculate_iv_rank(ticker); liquidity = check_option_liquidity(ticker); earnings_date = get_next_earnings(ticker); days_to_earnings = (earnings_date - today).days; if iv_rank > min_iv_rank and liquidity > threshold and days_to_earnings > 45: candidates.append({'ticker': ticker, 'iv_rank': iv_rank}); return sorted(candidates, key=lambda x: x['iv_rank'], reverse=True). **Strike Selection (1 SD / 2 SD)**: Calculate standard deviation: sigma = IV × sqrt(T/252). 1 SD move = Stock × (1 ± sigma). Sold strikes: 1 SD OTM: Put: Stock × (1 - sigma), Call: Stock × (1 + sigma). Wings (protection): 2 SD OTM: Put wing: Stock × (1 - 2×sigma), Call wing: Stock × (1 + 2×sigma). Example: Stock = $100, IV = 25%, T = 30 days. sigma = 0.25 × sqrt(30/252) = 0.086 (8.6%). 1 SD: $100 × (1 ± 0.086) = $91.4 / $108.6. Round to strikes: Sell 91 put, sell 109 call. 2 SD: $100 × (1 ± 0.172) = $82.8 / $117.2. Wings: Buy 83 put, buy 117 call. **Target Credit and Risk/Reward**: Target: 20-30% of max risk. Example: Wing spread = $5, Target credit = $1.00 to $1.50 (20-30%), Max risk = $5 - $1.25 = $3.75. Risk/reward ratio: Collect $125, risk $375, Return on risk = 33%. **Implementation**: def create_iron_condor(ticker, stock_price, iv, days_to_exp=30): # Calculate SD; sigma = iv × np.sqrt(days_to_exp / 252); # Determine strikes; put_sell = round_strike(stock_price × (1 - sigma)); put_buy = round_strike(stock_price × (1 - 2×sigma)); call_sell = round_strike(stock_price × (1 + sigma)); call_buy = round_strike(stock_price × (1 + 2×sigma)); # Get option prices; put_sell_price = get_option_price(ticker, put_sell, 'put', days_to_exp); put_buy_price = get_option_price(ticker, put_buy, 'put', days_to_exp); call_sell_price = get_option_price(ticker, call_sell, 'call', days_to_exp); call_buy_price = get_option_price(ticker, call_buy, 'call', days_to_exp); # Calculate credit; net_credit = (put_sell_price - put_buy_price) + (call_sell_price - call_buy_price); wing_width = min(put_sell - put_buy, call_buy - call_sell); max_loss = wing_width - net_credit; # Check if meets criteria (20-30% credit of width); if net_credit / wing_width < 0.20 or net_credit / wing_width > 0.35: return None; # Skip this setup; return {'put_sell': put_sell, 'put_buy': put_buy, 'call_sell': call_sell, 'call_buy': call_buy, 'credit': net_credit, 'max_loss': max_loss}. **Adjustment Rules**: Monitor daily: If stock approaches sold strike (within 2%), consider adjustment. Adjustment options: 1. Close entire position (take loss early if < 50% max loss). 2. Roll tested side: Move threatened strikes further out/away. 3. Convert to iron fly: Adjust untested side to match tested side. 4. Do nothing if < 21 days to expiration and still OTM. Rule: Exit at 50% of max loss or 75% of max profit: If P&L = -50% of max loss → close. If P&L = +75% of credit → close early, capture most profit. **Backtest Framework**: Historical data: Daily stock prices + IV for S&P 500 stocks, 2018-2023. Simulation: Each month: Screen stocks (IV Rank > 60%), Create iron condors (30 days to expiration), Hold until expiration or adjustment trigger, Track P&L. **Backtest Results (Example)**: Total trades: 450, Win rate: 68%, Avg profit (winners): $110, Avg loss (losers): -$320, Expected value: 0.68 × $110 - 0.32 × $320 = $75 - $102 = -$27 per trade. Hmm, negative EV! Why? Tail risk: Large losses in volatile periods (March 2020, etc.). Adjustment: More aggressive profit-taking (50% of credit) improves: New win rate: 72%, Avg profit: $65, Avg loss: -$280, EV: 0.72 × $65 - 0.28 × $280 = $47 - $78 = -$31. Still negative! Reality: Iron condors difficult in practice due to tail risk. **Risk Management Critical**: Position sizing: Never risk more than 5% of account per trade, Max 3-5 iron condors open at once. Stop losses: Exit at 50% max loss (or 2× credit received). Diversification: Trade different underlyings (uncorrelated sectors). Avoid earnings: Never hold through earnings (IV crush can hurt, but stock can gap). **Advanced: Unbalanced Iron Condors**: If slightly bullish, make put side wider: Sell 95 put / buy 88 put (7-wide), Sell 105 call / buy 110 call (5-wide). Collect more credit on put side, less risk on call side. **Production System**: Automated screening: Daily after market close. Trade execution: Auto-place orders at midpoint (good-til-canceled). Monitoring: Alerts if stock within 3% of sold strikes. Position tracking: Dashboard showing: Open positions, Days to expiration, Current P&L, Greeks exposure.",
    keyPoints: [
      'Iron condor: Sell OTM put + call at 1 SD, buy wings at 2 SD; collect credit if stock stays in range',
      'Strike selection: Use σ = IV × √(T/252) to calculate 1 SD and 2 SD strikes for optimal placement',
      'Target credit: 20-30% of wing width; Example: $5 wing, target $1.25 credit, max risk $3.75',
      'Adjustments: Exit at 50% max loss or 75% max profit to manage risk and lock in gains early',
      'Backtest reality: Iron condors have tail risk; need disciplined profit-taking and position sizing to be profitable',
    ],
  },
];
