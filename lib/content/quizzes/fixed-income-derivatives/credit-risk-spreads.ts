export const creditRiskSpreadsQuiz = [
  {
    id: 'crs-q-1',
    question:
      'Build a credit spread analyzer that: (1) Calculates fair credit spread based on rating, maturity, recovery rate, and liquidity premium, (2) Compares market spreads to fair value (identify cheap/rich bonds), (3) Estimates implied default probability from market spreads, (4) Tracks historical spread levels and generates alerts on outliers (spreads >2 standard deviations), (5) Provides attribution (what % of spread is default risk vs liquidity vs risk premium). Include: multiple rating agencies (S&P, Moody's, Fitch with mapping), industry-specific default rates (energy vs tech different PD), time-varying recovery rates (crisis = lower recovery). How do you handle: investment grade vs high yield (fallen angel detection)? Spread compression during bull markets (tight spreads underpricing risk)? Credit curve (2yr spread vs 10yr spread different)?',
    sampleAnswer:
      'Credit spread analyzer architecture: Fair spread calculation: Formula: Fair_spread = PD × LGD + Liquidity_premium + Risk_premium, Inputs: Rating (AAA to CCC), Maturity (years), Recovery_rate (default 40% for unsecured), Liquidity_premium (estimate from bid-ask spread, typical 20-50bp), Risk_premium (10-20bp for risk-averse investors), Default probability (PD): Use historical default rates by rating: AAA = 0.05%, AA = 0.2%, A = 0.5%, BBB = 1.0%, BB = 2.5%, B = 6.0%, CCC = 12.0% (annual), Adjust for maturity: PD_cumulative ≈ 1 - (1-PD_annual)^years for years <= 10, sqrt scaling for longer, Industry adjustment: Tech companies: PD × 0.8 (strong cash flows), Energy companies: PD × 1.3 (commodity price risk), Retailers: PD × 1.5 (Amazon disruption), LGD (Loss Given Default): LGD = 1 - Recovery_rate, Senior secured: Recovery = 70%, LGD = 30%, Senior unsecured: Recovery = 40%, LGD = 60%, Subordinated: Recovery = 25%, LGD = 75%, Time-varying: In recessions (2008, 2020), recovery rates fall 10-20 percentage points, track VIX as proxy for stress, Market spread analysis: Fetch market data: Corporate bond yield - Treasury yield of same maturity, Example: BBB 10yr corporate @ 6.3%, Treasury 10yr @ 4.5%, spread = 180bp, Compare to fair: If fair_spread = 150bp and market = 180bp, diff = +30bp (cheap), Assessment: <-20bp: Rich (overvalued, sell), -20bp to +20bp: Fair (hold), >+20bp: Cheap (undervalued, buy), Implied default probability: Rearrange formula: PD = (market_spread - liquidity - risk_premium) / LGD, Example: market_spread = 180bp, liquidity = 30bp, risk_premium = 10bp, LGD = 60%, PD_implied = (1.80% - 0.30% - 0.10%) / 0.60 = 2.33% annually, Compare to historical: If historical PD = 1.0% for BBB, implied = 2.33%, market pricing elevated risk, Historical tracking: Store daily: (date, issuer, rating, spread, treasury_yield, market_yield), Calculate statistics: mean, std_dev, percentiles (25th, 50th, 75th, 90th) over 1yr / 5yr, Z-score: z = (current_spread - mean) / std_dev, Alert if |z| > 2 (spread 2 std devs from norm), Attribution analysis: Total_spread = Default_component + Liquidity + Risk_premium, Default_component = PD × LGD, Calculate %: Default_pct = Default_component / Total_spread × 100%, Display: "Of 180bp spread: 80bp (44%) default risk, 30bp (17%) liquidity, 10bp (6%) risk premium, 60bp (33%) other/unexplained", Other component captures: Optionality (callables), tax effects, sentiment, Rating agency mapping: S&P ↔ Moody\'s ↔ Fitch: AAA ↔ Aaa ↔ AAA, AA ↔ Aa ↔ AA, A ↔ A ↔ A, BBB ↔ Baa ↔ BBB, BB ↔ Ba ↔ BB, B ↔ B ↔ B, CCC ↔ Caa ↔ CCC, Handle split ratings: If S&P = BBB, Moody\'s = BB, use lower (BB) for conservative, fallen angel detection: Monitor for downgrades crossing BBB/BB threshold, If rating goes BBB- → BB+, flag as fallen angel, Expected impact: Forced selling by investment-grade-only funds, spreads widen 50-150bp typically, Trading opportunity: Value investors buy fallen angels expecting recovery, Spread compression (bull markets): During low-volatility periods (2017, 2019), spreads compress to historical lows, BBB spreads might tighten to 100bp vs 150bp average, Risk: Spreads too tight = underpricing default risk, Detect: If current spread < 5th percentile historically, alert "extremely tight spreads", Recommendation: Reduce credit exposure when spreads compressed, Credit curve: Spreads vary by maturity for same issuer, Typically: 2yr spread < 5yr spread < 10yr spread (upward sloping), Inverted credit curve: Short-term spread > long-term (distress signal), Calculate: Spread_2yr = 200bp, Spread_10yr = 150bp, curve inverted = bad, Interpretation: Market expects default in near term (short spread high), if survives, long-term okay, API design: POST /credit/fair-spread with {rating, maturity, industry, recovery_rate} returns fair spread, GET /credit/market-spread?issuer=AAPL&maturity=10yr returns current market spread, POST /credit/analyze with {issuer, market_spread} returns {fair_spread, assessment, implied_pd, attribution}, GET /credit/historical?issuer=AAPL returns time series of spreads with statistics.',
    keyPoints: [
      'Fair spread: PD × LGD + Liquidity + Risk_premium, PD from historical rates by rating (AAA 0.05% to CCC 12%), adjust for industry (tech ×0.8, energy ×1.3)',
      'Market analysis: Compare market_spread to fair_spread, cheap if >+20bp, rich if <-20bp, generate buy/sell/hold signals',
      'Implied PD: PD = (market_spread - liquidity - risk) / LGD, compare to historical PD, elevated PD = market pricing more risk',
      'Attribution: Break down spread into components (default %, liquidity %, risk premium %), "other" captures unexplained (optionality, sentiment)',
      'Fallen angels: Detect BBB→BB downgrades, expect forced selling (spreads widen 50-150bp), track credit curve (inverted = distress signal)',
    ],
  },
  {
    id: 'crs-q-2',
    question:
      'Design a rating migration monitoring system that: (1) Tracks credit rating changes from all agencies (S&P, Moody\'s, Fitch), (2) Maintains rating transition matrix (probability of AAA→AA, BBB→BB, etc.), (3) Predicts future rating changes using financial metrics (leverage ratio, interest coverage, cash flow), (4) Alerts on potential downgrades before official announcement, (5) Calculates portfolio impact of rating migration (mark-to-market losses if downgraded). Include: positive/negative outlook tracking (rating on review), multi-step transitions (BBB→BB→B), sector correlations (energy downgrades cluster together). How do you handle: split ratings (S&P BBB, Moody\'s BB)? Rating shopping (issuers seek favorable ratings)? Through-the-cycle vs point-in-time ratings?',
    sampleAnswer:
      'Rating migration monitoring system: Rating change tracking: Data sources: Subscribe to S&P, Moody\'s, Fitch rating feeds (API or web scraping), schema: rating_changes (issuer, agency, old_rating, new_rating, outlook, date, reason), Types of changes: Upgrade: BB → BBB (positive), Downgrade: A → BBB (negative), Outlook change: BBB stable → BBB negative (warning signal), Watch list: "Under review for downgrade" (imminent change), Store history: 20+ years of rating transitions for statistical analysis, Transition matrix construction: Annual transitions: Count transitions over 1-year windows, Matrix[from_rating, to_rating] = count of transitions / total in from_rating, Example: Of 1000 BBB-rated issuers, 850 stayed BBB, 80 downgraded to BB, 50 upgraded to A, 20 defaulted, Transition prob: P(BBB→BB) = 80/1000 = 8%, P(BBB→A) = 5%, P(BBB→D) = 2%, P(BBB→BBB) = 85%, Multi-year matrix: (Annual_matrix)^n for n years, P(BBB→BB in 5yr) = calculate via matrix exponentiation, Update quarterly: Recompute matrix as new data arrives (5yr rolling window), Predictive model: Features from financial statements: Debt/EBITDA (leverage ratio, high = risky), EBITDA / Interest_expense (interest coverage, low = risky), Free_cash_flow / Debt (repayment ability), Current_ratio (liquidity), ROE, profit_margin (profitability), Industry (sector indicator), Market cap, Volatility (equity price volatility), Target: Predict rating change in next 12 months (upgrade, downgrade, no change), Model: Logistic regression or XGBoost classifier, Training: Historical data (financial metrics 12 months before rating change), Accuracy target: 70-80% (better than random, not perfect), Output: Downgrade_probability, Early warning threshold: If P(downgrade) > 30%, alert "High risk of downgrade", Outlook tracking: Rating outlooks: Positive (upgrade likely), Stable (no change expected), Negative (downgrade possible), Under review: Imminent change (decision within 90 days), Alert logic: Outlook change to negative → increase monitoring frequency to weekly, Under review for downgrade → urgent alert to portfolio managers, Historical pattern: "Negative" outlook → 40% chance of downgrade within 12 months, Portfolio impact: Hold positions: (issuer, rating, market_value, spread, duration), Simulate downgrade: If BBB→BB: Spread widens by +80bp typically (historical average), Price impact: ΔP/P ≈ -Duration × Δspread, Example: $10M position, duration 7, spread widens 80bp, Loss = $10M × 7 × 0.008 = $560,000, Aggregate: Sum losses across all positions with downgrade risk, VaR: Downgrade VaR = Σ(Position_MV × Duration × Spread_widening × Downgrade_prob), Multi-step transitions: BBB→BB→B: Model as Markov chain, P(BBB→B in 2yr) = P(BBB→BB in 1yr) × P(BB→B in 1yr) + P(BBB→B in 1yr), More realistic than assuming direct BBB→B transition, Sector correlations: Energy sector: Downgrades cluster when oil prices fall (<$50/barrel), 2015-2016: 30+ energy downgrades as oil crashed from $100 to $30, Financials: Cluster during recessions (2008: massive financial downgrades), Model: Conditional probability P(downgrade_i | downgrade_j) for issuers in same sector, Risk: Sector contagion amplifies losses (all energy bonds downgraded simultaneously), Split ratings: Definition: S&P rates BBB, Moody\'s rates Ba (BB equivalent), Handling: Conservative approach: Use lowest rating (BB) for risk management, Liberal approach: Use average or highest (for regulatory capital), Market convention: Traders often use S&P rating as primary, Policy: Document approach in Investment Policy Statement, Rating shopping: Issue: Issuers pay rating agencies → conflict of interest, Some issuers "shop" for most favorable rating (get BBB from Fitch, ignore BB from S&P), Detection: Flag issuers with large rating disparities (>2 notches), Mitigation: Use lowest rating, discount if only one agency rated, Through-the-cycle vs Point-in-time: Through-cycle (TTC): Rating reflects average risk over economic cycle (S&P, Moody\'s), doesn\'t change quickly with economic conditions, Point-in-time (PIT): Rating reflects current risk (more volatile), used internally by banks for loan provisioning, Implication: TTC ratings more stable, less predictive of short-term default, PIT ratings more reactive, better for trading signals, System: Track both for complete picture, API design: GET /ratings/history?issuer=AAPL returns all historical rating changes, POST /ratings/predict with {issuer, financial_metrics} returns downgrade_probability, GET /ratings/transition-matrix returns full probability matrix, POST /portfolio/downgrade-risk with {positions} returns VaR from potential downgrades, WebSocket /ws/rating-alerts for real-time notifications on changes.',
    keyPoints: [
      'Track rating changes: Subscribe to S&P/Moody\'s/Fitch feeds, store (issuer, agency, old_rating, new_rating, outlook, date), historical 20yr data',
      'Transition matrix: Annual probabilities P(from→to), BBB: 85% stay, 8% downgrade to BB, 5% upgrade to A, 2% default, matrix^n for multi-year',
      'Predictive model: Features (Debt/EBITDA, interest coverage, FCF, volatility), logistic regression/XGBoost, predict downgrade probability, alert if >30%',
      'Portfolio impact: Simulate downgrade (spread widens 80bp for BBB→BB), Loss = MV × Duration × Δspread, aggregate across positions, calculate downgrade VaR',
      'Split ratings: Use lowest rating (conservative), watch outlook (negative = 40% downgrade chance), sector correlations (energy cluster with oil prices)',
    ],
  },
  {
    id: 'crs-q-3',
    question:
      'Implement a default probability model that: (1) Estimates probability of default from market data (CDS spreads, bond spreads, equity volatility), (2) Combines multiple approaches (structural models like Merton, reduced-form hazard rate models, historical frequency), (3) Calibrates to market prices (implied PD from CDS should match observed spreads), (4) Forecasts default risk over multiple horizons (1yr, 3yr, 5yr, 10yr), (5) Generates early warning signals (PD spike indicates distress). Include: Merton model (equity as call option on assets, default when assets < debt), KMV distance-to-default, CDS-implied PD. How do you handle: model disagreement (structural says 2% PD, CDS implies 5%)? Sudden jumps in PD (credit events, covenant violations)? Recovery rate assumption (affects PD calculation)? Time-varying default probability (higher in recessions)?',
    sampleAnswer:
      'Default probability estimation system: CDS-implied PD (market-based): CDS spread = PD × LGD × Duration (simplified), Rearrange: PD = CDS_spread / (LGD × Duration), Example: 5yr CDS = 200bp, LGD = 60%, Duration ≈ 4.5, PD = 2.00% / (0.60 × 4.5) = 0.74% annual, More precise: Solve for hazard rate λ such that PV(protection_leg) = PV(premium_leg), PV_protection = Σ λ × LGD × DF_t × survival_prob_t, PV_premium = CDS_spread × Σ DF_t × survival_prob_t, Iterative solver (Newton-Raphson) to find λ, Cumulative PD(T) = 1 - exp(-λ × T), Bond spread-implied PD: Similar to CDS: bond_spread = PD × LGD + liquidity_premium, Less reliable than CDS (liquidity noise, covenants), Use when CDS not available (smaller issuers), Merton structural model: Model: Firm value V_t follows geometric Brownian motion, Default occurs if V_T < Debt_T at maturity, Equity is call option on firm value: E = V × N(d1) - D × exp(-rT) × N(d2), where d1 = [ln(V/D) + (r + 0.5σ_V^2)T] / (σ_V √T), d2 = d1 - σ_V√T, PD = N(-d2) (probability V_T < D), Calibration: Observe equity price E and equity volatility σ_E, Solve for implied asset value V and asset volatility σ_V: σ_E × E = σ_V × V × N(d1) (equity vol relation), Use Newton-Raphson to find V and σ_V, Calculate distance-to-default: DD = [ln(V/D) + (μ - 0.5σ_V^2)T] / (σ_V√T), PD = N(-DD) under normal distribution, KMV distance-to-default: Enhancement of Merton model, Use empirical distribution (not normal) for more accurate tail risk, DD = (Asset_value - Default_point) / (Asset_value × Asset_volatility), Expected default frequency (EDF) mapped from DD using KMV database, More reliable than raw Merton (avoids normality assumption), Hazard rate model (reduced-form): Model: Default intensity λ_t (instantaneous default probability), Survival probability: S(t) = exp(-∫_0^t λ_s ds), Constant λ: S(t) = exp(-λt), Cumulative PD: Q(t) = 1 - exp(-λt), Calibrate λ to CDS spreads: Find λ such that model CDS price = market CDS price, Solve using root-finding algorithm, Time-varying λ: Allow λ_t to depend on macro factors (VIX, credit spreads, GDP growth), Historical frequency model: Simple: PD = historical default rate for rating category, Example: BBB has 1.0% annual PD historically, Advantage: Easy to implement, grounded in data, Disadvantage: Backward-looking, doesn\'t capture current firm-specific risk, Use as baseline / sanity check, Model combination: Ensemble: Weighted average of multiple approaches, weights = [0.40 CDS, 0.30 Merton, 0.20 Hazard, 0.10 Historical], Final_PD = 0.40 × PD_CDS + 0.30 × PD_Merton + 0.20 × PD_hazard + 0.10 × PD_historical, Model disagreement: If CDS implies 5% PD but Merton implies 2%: Investigate: CDS might include liquidity premium (widen spread), or Merton assumptions wrong (asset vol, default point), Typically: Trust CDS (incorporates market view), Flag for review: If |PD_CDS - PD_Merton| > 2%, alert analyst, Recovery rate handling: LGD = 1 - Recovery_rate, Default: Use senior unsecured recovery = 40%, LGD = 60%, Adjust for seniority: Senior secured = 70% recovery, subordinated = 25% recovery, Time-varying: In crisis (2008, 2020), recovery rates drop 10-20 points (distressed sales), Track distressed debt recovery rates for real-time adjustment, Multi-horizon forecasting: 1yr PD: Most accurate (near-term risk well-priced), 5yr PD: Cumulative = 1 - exp(-λ × 5), less certain, 10yr PD: Highly uncertain, heavily discounted, Term structure: Plot PD vs horizon (similar to yield curve), Typically: Upward sloping (higher cumulative risk), Inverted: Very short-term PD > long-term (imminent distress), Early warning signals: PD spike: If PD doubles within 1 month (e.g., 1% → 2%), alert "credit deterioration", CDS widening: If CDS spread widens >100bp in 1 week, alert "market stress", Equity volatility: If σ_E spikes >50%, alert "distress risk", Covenant violations: Monitor for debt covenant breaches (leverage ratio exceeded), triggers accelerated default risk, Sudden jumps: Credit events: Earnings miss, debt downgrade, lawsuit, merger blocked, cause discontinuous jumps in PD, Model: Add jump component to hazard rate (Poisson jumps), Historical calibration: Measure average jump size and frequency from past credit events, API design: GET /default/pd?issuer=AAPL&horizon=5yr returns {pd_cds, pd_merton, pd_hazard, pd_historical, pd_combined}, POST /default/merton with {equity_price, equity_vol, debt, r, T} returns Merton PD and distance-to-default, GET /default/term-structure?issuer=AAPL returns PD(1yr), PD(3yr), PD(5yr), PD(10yr), WebSocket /ws/default-alerts for real-time spikes in PD.',
    keyPoints: [
      'CDS-implied PD: Solve hazard rate λ from CDS spread (PV protection = PV premium), PD(T) = 1 - exp(-λT), most market-relevant',
      'Merton model: Equity = call on assets, default if V < D, calibrate V and σ_V from equity data, PD = N(-distance_to_default), structural approach',
      'Hazard rate model: Default intensity λ_t, S(t) = exp(-λt), PD(t) = 1 - S(t), calibrate to CDS, reduced-form approach, allows time-varying λ',
      'Model combination: Weighted average (40% CDS, 30% Merton, 20% Hazard, 10% Historical), flag disagreement if |PD_CDS - PD_Merton| > 2%',
      'Early warning: PD spike (doubles in 1mo), CDS widening (>100bp in 1wk), equity vol >50%, covenant violations, sudden jumps from credit events',
    ],
  },
];

