export const regulatoryLandscapeEngineersQuiz = [
  {
    id: 'rle-q-1',
    question:
      'Design a compliance monitoring system for a broker-dealer that handles: (1) Reg SHO compliance (locate shares before shorting, track fail-to-delivers, enforce T+5 close-out), (2) Pattern day trader detection (track day trades in rolling 5-day window, enforce $25K minimum equity), (3) Reg BI suitability checks (validate customer profile matches product risk/complexity), (4) Order audit trail (SEC Rule 17a-4: maintain 7-year records with WORM storage). Include database schema, real-time monitoring alerts, and regulatory report generation. How do you handle: customer attempts to circumvent PDT rule across multiple accounts? Suitability override by human advisor? Failed locate for urgent short?',
    sampleAnswer: `Compliance monitoring system architecture: Database schema includes customers table (id, kyc_status, account_value, risk_tolerance, investment_experience), trades table (id, customer_id, ticker, side, quantity, price, timestamp, is_day_trade, locate_id), locates table (id, ticker, quantity, source, expiration, used), ftd_table (id, ticker, quantity, trade_date, close_out_deadline, status), audit_log table (immutable append-only with cryptographic hashing for WORM compliance). Reg SHO engine: before accepting short order, query locates table for available locate with valid expiration, if none found, call locate_service API to request from prime broker, upon FTD detection (settlement system reports delivery failure), create ftd_record with T+5 close-out deadline, scheduled job runs daily checking ftd close-out deadlines, triggers forced buy-in if deadline reached. PDT detector runs real-time: on each trade, query last 5 business days of trades, count day_trades (where buy and sell same ticker same day), if ≥4 day trades AND account_value <$25K, flag account as restricted, block new day trades, send email notification. Reg BI checker: on order entry, retrieve customer profile (age, income, net_worth, objectives, risk_tolerance), score product risk (options=high, leveraged_etf=very_high, stocks=medium), compare: if product_risk > customer_risk_tolerance + 1 level, reject with suitability warning, if complex product (options, structured notes) and experience='limited', require manual advisor approval logged in override_log table. Audit trail: all orders logged to immutable audit_log with: order_details JSON, timestamp (microsecond precision), user_id, ip_address, geolocation, device_fingerprint, cryptographic hash of previous log entry (blockchain-like), stored in WORM storage (AWS S3 Object Lock) with 7-year retention policy, daily integrity check verifies hash chain unbroken. Edge cases: PDT circumvention across accounts detected by linking accounts via SSN/address/device_fingerprint, if same person has multiple accounts, aggregate day trades across all accounts, suitability override requires: advisor license verification (Series 7), rationale documented (min 100 characters), supervisor approval if override value >$50K, failed locate for urgent short: if market-maker exemption applies (Reg SHO Rule 203(b)(3)), allow naked short temporarily, flag for locate within T+3, if retail customer, reject order with 'shares not available' message.`,
    keyPoints: [
      'Reg SHO: Locate shares before short (query locates table), track FTDs (settlement T+2 fails), enforce T+5 close-out (scheduled job + forced buy-in)',
      'PDT detection: Real-time query last 5 days on each trade, count day trades (buy + sell same day), flag if ≥4 trades and <$25K equity',
      'Reg BI suitability: Score product risk vs customer tolerance, reject if mismatch >1 level, require advisor override for complex products + inexperienced customer',
      'Audit trail: Immutable append-only log with cryptographic hashing (blockchain-like), WORM storage (S3 Object Lock), 7-year retention per SEC 17a-4',
      'Edge cases: Link accounts by SSN for PDT circumvention, require advisor approval + rationale for suitability overrides, reject urgentshorts if no locate available',
    ],
  },
  {
    id: 'rle-q-2',
    question:
      'Build a KYC/AML system that: (1) Collects customer identity (name, SSN, DOB, address, ID photo), (2) Verifies identity against third-party databases (credit bureaus, OFAC sanctions list), (3) Monitors transactions for suspicious activity (structuring, large cash, rapid transfers), (4) Generates SARs (Suspicious Activity Reports) and CTRs (Currency Transaction Reports) for FinCEN. Include ML model for anomaly detection. How do you handle: false positives (legitimate activity flagged)? Identity theft (someone uses stolen SSN)? International customers (no SSN)?',
    sampleAnswer: `KYC/AML system design: Customer onboarding flow: collect required fields (full_name, SSN, DOB, address, government_id_photo), call ID verification API (Jumio/Onfido): upload ID photo, extract text via OCR, verify security features (holograms, microprinting), match photo to selfie via facial recognition (liveness detection prevents photos of photos), verify SSN with credit bureaus (Experian API returns ssn_valid, name_match, address_match), check OFAC SDN list (specially designated nationals): parse name into variants (John Smith = John A Smith, J Smith, etc), fuzzy match against list (~80% similarity threshold), manual review if potential match. Transaction monitoring: ingest all transactions (deposits, withdrawals, trades, transfers) into timeseries database (InfluxDB), ML anomaly detection model: features include: transaction_amount, transaction_frequency (last 24h, 7d, 30d), velocity (change in account balance), source_destination patterns (same accounts repeatedly), behavioral deviation (current vs historical averages), train isolation forest model on 6 months of historical data, score each transaction 0-100 (100=most anomalous), alert if score >80, rules-based alerts: CTR if cash transaction ≥$10K (auto-file form 112 to FinCEN), structuring detection: multiple transactions <$10K totaling >$10K same day (flags $9K + $9K deposits = $18K, suspicious), layering: rapid transfers in/out (deposit → transfer to external → return within 24h), dormant account suddenly active: no activity 6 months → $50K deposit. SAR generation: when alert triggered (ML score >80 or rules match), create SAR case in queue, compliance analyst reviews: transaction details, customer profile, historical activity, external data (news, sanctions), decides: file SAR (suspicious), dismiss (legitimate), escalate (further investigation), if SAR filed: complete FinCEN Form 111 (narrative describing suspicious activity, parties involved, amounts, dates), submit electronically to FinCEN BSA E-Filing system, cannot notify customer (tipping off is illegal). False positive handling: ML model tuned for ~2% FPR (false positive rate), analyst training data improves model (dismissed cases labeled as non-suspicious), customer segmentation: high-net-worth individuals have higher thresholds (their $100K transaction is normal), whitelist known patterns: monthly salary deposit, regular bill payments. Identity theft detection: SSN already in system for different name → reject, require manual review, fraud score from credit bureau (Experian FraudIQ) >70 → additional verification (bank statement, utility bill), velocity checks: multiple account applications same day. International customers: accept passport + national ID instead of SSN, use ITIN (Individual Taxpayer Identification Number) for US tax reporting, enhanced due diligence for high-risk countries (FATF blacklist), require additional documentation: proof of address, source of funds letter.`,
    keyPoints: [
      'KYC: Collect identity (SSN, ID photo), verify with third-party APIs (Jumio for ID, Experian for SSN, OFAC for sanctions), facial recognition + liveness detection',
      'AML monitoring: ML anomaly detection (isolation forest on transaction features), rules-based alerts (CTR ≥$10K cash, structuring <$10K multiple same day)',
      'SAR workflow: Alert → compliance analyst review → decide (file SAR, dismiss, escalate) → submit FinCEN Form 111 electronically, never notify customer',
      'False positives: Tune ML model for ~2% FPR, analyst feedback improves model, segment customers (HNW have higher thresholds), whitelist known patterns',
      'Edge cases: Identity theft detected by SSN collision + fraud score, international customers use passport + ITIN, enhanced due diligence for high-risk countries',
    ],
  },
  {
    id: 'rle-q-3',
    question:
      'Implement SEC Rule 606 compliance (order routing disclosure). Quarterly, brokers must disclose: (1) percentage of orders routed to each venue (Citadel 45%, Virtu 30%, exchanges 25%), (2) PFOF payments received ($0.002/share from each market maker), (3) price improvement statistics (average improvement per order). Build system that: tracks every order routing decision, calculates metrics, generates SEC-compliant report (Form 606). How do you handle: routing logic optimization (best execution vs PFOF revenue)? Venues change mid-quarter? Customer requests individual report (Rule 606(b)(3))?',
    sampleAnswer: `Rule 606 reporting system: Data collection layer captures every order with: order_id, ticker, side, quantity, order_type, routing_timestamp, routed_to venue (citadel_securities, virtu_financial, nyse, nasdaq, etc), execution_price, reference_price (NBBO at routing time), price_improvement (execution - reference), pfof_payment (venue-specific rates: citadel=$0.002/share, virtu=$0.0018/share), metadata (customer_type retail/institutional, order_size_category 100-499 shares bucket). Aggregation engine runs end-of-quarter: group orders by (customer_type, ticker, order_type), calculate for each group: total_orders, routed_to_venue counts (citadel: 12,450 orders 45%, virtu: 8,300 orders 30%, exchanges: 6,250 orders 25%), avg_price_improvement (sum(execution - reference) / total_orders = $0.012/share average), pfof_revenue (sum(pfof_payment) = $54,000 from citadel, $29,880 from virtu), execution_rate (filled_orders / total_orders = 99.8%). Report generation: SEC Form 606 XML schema includes: reporting_period (Q1 2024), broker_details (name, CRD number), venues section (for each venue: name, orders_percentage, pfof_payment, price_improvement_stats), generate human-readable PDF + machine-readable XML, publish on public website (SEC requirement: publicly accessible), file electronically with SEC via EDGAR system. Routing logic optimization: define execution quality score = price_improvement - (pfof_payment / 10) - latency_penalty (prioritizes customer outcomes over PFOF revenue), for each order, calculate score for all available venues (citadel score: $0.012 improvement - $0.0002 = $0.0118, nyse score: $0.008 improvement - $0.0003 fee = $0.0077), route to highest score venue, log decision rationale in routing_log table, quarterly analyze: are we achieving best execution? compare actual routing vs theoretical optimal, adjust algorithm if underperforming. Mid-quarter venue changes: new venue added (Wolverine Trading): update routing_logic to include Wolverine in scoring, backfill historical data: note 'Wolverine available from 2024-02-15', pro-rate percentages (Q1 report shows: Citadel 45% Jan-Feb 40% Mar when Wolverine added). Customer-specific reports (606(b)(3)): any customer can request individual report showing their orders only, filter order_routing_log by customer_id, generate report showing: your_orders routed_to_citadel 48% (slightly higher than firm average 45%), your_avg_price_improvement $0.013/share (better than average $0.012), your_payment_for_order_flow estimated $0.096 (48 orders × 100 shares × $0.002), provide within 7 days of request (SEC requirement), format: PDF via email or downloadable from customer portal.`,
    keyPoints: [
      'Data collection: Capture every order with routing_venue, execution_price, reference_price (NBBO), price_improvement, pfof_payment per venue',
      'Quarterly aggregation: Group by customer_type + ticker + order_type, calculate venue percentages, avg price improvement, total PFOF revenue',
      'SEC Form 606: XML + PDF format, publish publicly on website, file via EDGAR, include venue details + PFOF + price improvement stats',
      'Routing optimization: Score each venue (price_improvement - pfof_cost - latency), route to highest score (best execution), log rationale for audit',
      'Customer reports (606(b)(3)): Filter by customer_id, show their specific routing stats vs firm average, provide within 7 days of request',
    ],
  },
];
