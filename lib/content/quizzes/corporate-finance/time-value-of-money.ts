export const timeValueOfMoneyQuiz = [
  {
    id: 'tvm-q-1',
    question:
      'You are advising a startup founder choosing between two compensation packages: (1) $150,000 salary with a 4-year vesting stock option grant potentially worth $500,000 at current valuation, or (2) $200,000 salary with no equity. Walk through a complete NPV analysis to help them decide. Address: (a) how to discount the uncertain equity value, (b) the appropriate discount rate (risk-free vs risk-adjusted), (c) probability adjustments for startup failure, (d) tax implications (ordinary income vs capital gains), and (e) the role of risk tolerance. What additional factors beyond NPV should influence the decision?',
    sampleAnswer:
      'Complete compensation analysis: (a) DCF framework: Package 1: PV = $150K/year salary for 4 years + PV of equity. Package 2: PV = $200K/year for 4 years. Use personal discount rate (opportunity cost of capital). (b) Discount rate: Start with risk-free rate (~4%) for salary (certain). For equity, use risk-adjusted rate reflecting startup failure risk. Venture-backed startups have ~75% failure rate. Appropriate discount rate: 25-40% for early-stage equity. (c) Probability adjustment: If equity "worth" $500K today, probability-weighted value = $500K × P(success) × P(exit at current valuation). Assume 25% survival rate and 50% chance of maintaining valuation = $500K × 0.25 × 0.50 = $62.5K expected value. Discount this over 4 years at 30%: PV = $62.5K / (1.30)^4 = $21.9K. (d) Calculate NPVs: Package 1: PV of salary = $150K × [(1 - 1.04^-4) / 0.04] = $548K. Plus equity PV = $21.9K. Total = $569.9K. Package 2: PV = $200K × [(1 - 1.04^-4) / 0.04] = $730.7K. Package 2 wins by $160.8K! (e) Tax implications: Salary = ordinary income (~35% marginal rate). Equity (if ISOs, held 2+ years) = long-term capital gains (~20%). After-tax: Package 1 = $548K × 0.65 + $21.9K × 0.80 = $373.6K. Package 2 = $730.7K × 0.65 = $475K. Package 2 still wins. (f) Beyond NPV: Risk tolerance (equity is lottery ticket), liquidity needs (equity illiquid for 4+ years), belief in company (inside information?), career growth (equity often means more responsibility), negotiation room (can you get both?), diversification (don\'t put all eggs in one basket). Recommendation: If founder needs income certainty (mortgage, kids), choose Package 2. If young, risk-tolerant, and believes in company, Package 1 + negotiate higher equity. But pure NPV math favors cash.',
    keyPoints: [
      'Discount equity at risk-adjusted rate (25-40%) reflecting startup failure risk',
      'Probability-weight equity value: 75% startups fail, account for exit uncertainty',
      'Tax treatment matters: salary (35% ordinary) vs equity (20% long-term cap gains)',
      'NPV is necessary but not sufficient: liquidity needs, risk tolerance crucial',
      'Expected value of $500K equity grant in risky startup: ~$22K PV',
    ],
  },
  {
    id: 'tvm-q-2',
    question:
      'Design a "mortgage payoff calculator" that helps homeowners decide whether to make extra principal payments or invest the money. Your calculator should: (1) compute interest saved by early payoff, (2) compare to investment returns, (3) account for mortgage interest tax deductibility, (4) incorporate different risk scenarios, and (5) present breakeven analysis. Explain your methodology, key assumptions, and provide sample Python code structure. How would you explain the results to a non-technical user?',
    sampleAnswer:
      'Mortgage payoff decision framework: (1) Interest saved calculation: Generate amortization schedules for two scenarios: (a) normal payment schedule, (b) accelerated with extra payments. Difference in total interest = savings. Example: $300K loan, 4% rate, 30 years, normal payment $1,432/mo. Extra $500/mo saves $54K interest and pays off 9.5 years early. (2) Investment comparison: Invest extra $500/mo at expected return r. FV = $500 × [(1+r)^n - 1] / r. At 7% for 20.5 years: FV = $263K. Compare to $54K savings → investing wins by $209K. (3) Tax adjustments: Mortgage interest is tax-deductible (for itemizers). Effective after-tax rate = 4% × (1 - 0.24) = 3.04%. Investment returns are taxed. After-tax return = 7% × (1 - 0.15) = 5.95% (long-term cap gains). Recalculate: After-tax interest saved = $54K × 0.76 = $41K. After-tax investment value = $263K × 0.85 = $224K. Spread widens to $183K. (4) Risk scenarios: Investment returns are uncertain. Mortgage savings are guaranteed. Monte Carlo simulation: If investment returns vary (Normal(7%, 3%)), show distribution of outcomes. 5th percentile: investing still wins. 25th percentile: roughly breakeven. Median: investing wins big. But guaranteed savings appeal to risk-averse. (5) Breakeven: At what investment return are options equal? Solve: Extra payment NPV = Investment NPV. With numbers above: breakeven ≈ 4.5% investment return. Below this, pay off mortgage. Above this, invest. (6) Code structure: class MortgagePayoffAnalyzer: def amortization_schedule(principal, rate, term, extra_pmt): ... return schedule. def calculate_interest_saved(): ... def investment_value(pmt, rate, periods): ... def tax_adjust(value, rate): ... def breakeven_rate(): ... def monte_carlo_simulation(iterations=10000): ... (7) Non-technical explanation: "Your mortgage costs 4%, but Uncle Sam gives you back 24% (tax deduction), so real cost is 3%. If you can earn more than 3% investing (after taxes), you come out ahead. Markets historically return 7%, so odds favor investing. BUT markets are risky—they could return 0% or even negative. Paying off mortgage is guaranteed savings. Think of it as 3% guaranteed return vs 7% average but risky return. Your call depends on: Can you stomach risk? Do you hate debt? Do you have emergency fund? If risk-tolerant with savings, invest. If risk-averse or approaching retirement, pay off mortgage." Key insight: Math usually favors investing, but psychology and risk tolerance matter.',
    keyPoints: [
      'Interest saved by extra payments is "guaranteed return" at after-tax mortgage rate',
      'Compare to after-tax investment returns: usually favors investing (7% vs 3%)',
      'Tax deductibility reduces effective mortgage cost by ~25% (if itemizing)',
      'Breakeven investment return ≈ after-tax mortgage rate (3-4% range)',
      'Risk matters: guaranteed 3% savings vs uncertain 7% returns',
    ],
  },
  {
    id: 'tvm-q-3',
    question:
      'You are building a "retirement savings calculator" that must account for: (a) changing contribution amounts over time (raises), (b) employer matching, (c) different investment return phases (aggressive → conservative), (d) inflation, (e) social security benefits, and (f) varying withdrawal strategies. Explain how to structure this calculation using time value of money principles. What are the key assumptions users should understand? How do you handle uncertainty in returns and lifespan?',
    sampleAnswer:
      "Comprehensive retirement calculator design: (1) Accumulation phase (savings): Model as growing annuity due (contributions at beginning of year). Year 1: Contribution = C. Year t: Contribution = C × (1 + salary_growth)^(t-1). Add employer match: If 50% match up to 6% salary, and saving 10%, match = min(0.10, 0.06) × 0.50 × salary = 3% of salary. Future value at retirement: FV = Σ[contribution_t × (1 + return_t)^(retirement_age - t)] from age 25 to 65. (2) Multi-phase returns: Age 25-45 (aggressive, 100% stocks, assume 9% return). Age 45-55 (balanced, 70/30 stocks/bonds, assume 7% return). Age 55-65 (conservative, 50/50, assume 5% return). Use appropriate rate for each phase when compounding. (3) Inflation adjustment: All future values in nominal dollars must be converted to today's purchasing power. Real FV = Nominal FV / (1 + inflation)^years. Assume 2.5% inflation. (4) Social Security: Estimate monthly benefit based on average indexed monthly earnings (AIME). Typical replacement rate: 40% of pre-retirement income for median earners. PV of benefits from age 67 to life expectancy (85): PV = monthly_benefit × 12 × [(1 - (1+real_rate)^-18) / real_rate]. Use real rate (nominal rate - inflation). (5) Withdrawal phase: Multiple strategies: (a) 4% rule: Withdraw 4% of initial balance, adjusted for inflation annually. Portfolio should last 30 years. (b) Required Minimum Distributions (RMDs): IRS requires withdrawals starting age 73. Amount = balance / life expectancy factor. (c) Systematic: Fixed dollar amount. (d) Dynamic: Adjust withdrawals based on portfolio performance. Model as annuity: PV = Payment × [(1 - (1+r)^-n) / r]. (6) Monte Carlo for uncertainty: Returns are not constant. Run 10,000 simulations with random returns drawn from historical distribution (Normal(7%, 18%) for stocks). Calculate probability of success (portfolio lasting until age 95). Output: median outcome, 10th percentile (bad luck), 90th percentile (good luck). (7) Longevity risk: Use life expectancy tables (typically age 85-90). Add buffer years (5-10 extra). Option: Show \"probability of outliving savings\" at different ages. (8) Key assumptions to communicate: Investment returns (7-9% nominal, 5-7% real) are historical averages—not guaranteed. Inflation (2-3%) erodes purchasing power. Social Security may change (assume 70-100% of promised benefits for conservatism). Health costs accelerate in old age (plan extra). Sequence of returns risk: Retiring into bear market is worse than average returns. (9) Python structure: class RetirementCalculator: def __init__(self, current_age, retirement_age, life_expectancy, initial_salary, savings_rate, employer_match): ... def calculate_contributions(self): # Growing annuity with employer match. def accumulation_phase(self): # Multi-phase returns. def social_security_benefit(self): # Based on AIME. def withdrawal_strategy(self, strategy='4_percent'): ... def monte_carlo_simulation(self, n_simulations=10000): # Random return draws. def probability_of_success(self): # % simulations where money lasts. (10) Key insight: Small changes in contribution rate or retirement age have massive impact due to compounding. Delaying retirement by 2 years can improve outcome by 20-30%.",
    keyPoints: [
      'Model contributions as growing annuity with employer match (free money)',
      'Use multi-phase returns: aggressive early, conservative near retirement',
      'Inflation adjustments critical: nominal values misleading, use real dollars',
      'Monte Carlo simulation for uncertainty: show probability distribution of outcomes',
      '4% withdrawal rule: historically safe, but adjust for market conditions',
    ],
  },
];
