export const designingRiskSystemsQuiz = [
  {
    id: 'drs-q-1',
    question:
      'Design a real-time P&L calculation system for a multi-asset portfolio (stocks, options, futures). Address: (1) handling different asset types with different P&L calculations, (2) mark-to-market frequency and latency requirements, (3) separating realized vs unrealized P&L correctly, (4) handling corporate actions (splits, dividends, mergers), (5) multi-currency positions with FX risk. How would you ensure P&L accuracy and reconcile with broker statements?',
    sampleAnswer:
      'Real-time P&L system design: (1) Asset-specific P&L: Stocks: P&L = quantity × (current_price - avg_entry_price). Simple market value calculation. Options: P&L includes premium paid/received + current option value (Black-Scholes). Greeks change requires re-valuation. Example: Buy call for $5, now worth $8 → unrealized P&L = +$3 per share × 100 shares/contract = +$300. Futures: P&L = quantity × contract_multiplier × (current_price - entry_price). Daily settlement: realized P&L moved to cash account. Example: E-mini S&P at 4000, now 4050 → P&L = 1 contract × $50 multiplier × 50 points = $2,500. Use strategy pattern: interface AssetPLCalculator with implementations for each asset type. (2) Mark-to-market frequency: Stocks/options: Update on every market data tick for real-time P&L. Latency target: <10ms from tick to P&L update. Use in-memory data structures, avoid database queries in hot path. Futures: Daily settlement mark, but show intraday P&L continuously. End-of-day: Reconcile with exchange settlement prices. Architecture: Market data stream → P&L engine (Redis for state) → Dashboard (WebSocket updates). (3) Realized vs unrealized P&L: Realized: Occurs when position closed (fully or partially). Track basis using FIFO, LIFO, or specific lot identification. Example: Buy 100 shares @ $50, buy 100 @ $60, sell 100 → realized P&L with FIFO = (sell_price - $50) × 100. Unrealized: Mark-to-market on open positions. Changes with every price tick. Example: Remaining 100 shares @ $60 with market at $65 → unrealized = ($65 - $60) × 100 = $500. Track separately: realized_pnl (cash impact), unrealized_pnl (paper gains/losses), total_pnl = realized + unrealized. (4) Corporate actions: Stock splits: Adjust position quantity and basis price. 2:1 split: 100 shares @ $100 → 200 shares @ $50. P&L unchanged. Dividends: Cash dividend → realized P&L increase (cash received). Stock dividend → adjust quantity. Mergers: AAPL acquires TSLA, 1 TSLA → 0.5 AAPL. Convert TSLA position to AAPL using exchange ratio. Track original TSLA basis for tax purposes. Implementation: Subscribe to corporate actions feed, apply adjustments before market open, log all adjustments for audit. (5) Multi-currency FX risk: Store base currency (USD) and position currency. Example: Long 1000 shares HSBC (GBP) @ £6.00 → $8,000 USD equivalent @ GBP/USD = 1.33. P&L calculation: Convert position to USD using current FX rate. FX P&L: Gain/loss from currency movement separate from asset P&L. Example: HSBC unchanged @ £6.00, but GBP/USD drops to 1.25 → position now $7,500 → FX loss = $500. Report both: asset_pnl (in local currency), fx_pnl (currency translation), total_pnl (sum in USD). Hedge FX: Use FX forwards to lock in exchange rate, reducing FX risk. (6) Accuracy and reconciliation: End-of-day reconciliation: Compare internal P&L with broker statement. Discrepancies investigated immediately. Common causes: Missed fill reports, incorrect corporate action handling, FX rate differences, different lot identification methods (FIFO vs specific lot). Automated checks: Total position quantities match broker. Total cash balance matches (realized P&L flows to cash). Sum of all P&Ls equals portfolio value change. Audit trail: Log every P&L calculation with timestamp, inputs, outputs. Allows reconstruction of P&L for any historical point. Test reconciliation: Daily automated job compares with broker API. Alert if mismatch >0.1% or $1000. Manual review for all discrepancies. Critical: P&L system is source of truth for risk decisions. Accuracy more important than speed. If uncertain about calculation, mark position for manual review.',
    keyPoints: [
      'Asset-specific: stocks (mark-to-market), options (Black-Scholes revaluation), futures (daily settlement)',
      'Mark-to-market: <10ms latency, update on every tick, in-memory data structures',
      'Realized vs unrealized: realized when closed (FIFO/LIFO), unrealized is mark-to-market on open positions',
      'Corporate actions: splits (adjust quantity/price), dividends (cash/stock), mergers (convert positions)',
      'Multi-currency: separate asset P&L and FX P&L, use current FX rates, hedge with forwards',
    ],
  },
  {
    id: 'drs-q-2',
    question:
      'Compare the three main VaR calculation methods: (1) Historical Simulation, (2) Parametric (Variance-Covariance), (3) Monte Carlo. For each: explain the methodology, discuss advantages and disadvantages, computational requirements, and when to use. Why do regulators often require multiple VaR methods? Provide specific examples where each method fails.',
    sampleAnswer:
      "VaR methods comparison: (1) Historical Simulation: Methodology: Use actual historical returns distribution. No distributional assumptions. Steps: (a) Calculate daily returns for last N days (typically 252 days = 1 year). (b) Apply returns to current portfolio. (c) VaR = percentile of simulated P&L distribution. Example: 95% VaR = 5th percentile (worst 5% outcome). Advantages: No assumptions about distribution (works with fat tails, skewness). Captures actual correlations and dependencies. Easy to explain to non-technical stakeholders. Disadvantages: Limited to historical events (doesn't predict new scenarios). If 2008 crisis not in window, won't predict similar events. Requires sufficient history (1+ years). Assumes future resembles past. Computational: Fast (sort N returns, take percentile). O(N log N). Can handle thousands of positions. When to use: Standard risk reporting, when recent history representative, portfolios with non-normal returns (options). Failure case: COVID crash (Feb 2020): Historical VaR based on 2019 data would vastly underestimate risk. No pandemic in recent history. (2) Parametric (Variance-Covariance): Methodology: Assume returns are normally distributed. Calculate portfolio variance from covariance matrix. VaR = z-score × portfolio_std × portfolio_value. Example: 95% VaR → z = 1.645, portfolio_std = 2% → VaR = 1.645 × 0.02 × $1M = $32,900. Advantages: Fast computation (matrix multiplication). Smooth VaR (no jumps from day to day). Works with small sample sizes. Scales to large portfolios (efficient covariance estimation). Disadvantages: Normal distribution assumption fails for financial returns (fat tails). Underestimates tail risk. Example: Normal distribution predicts Black Monday (1987, -22.6% drop) should happen once in 10^50 years. Actually happened. Linear assumption (Delta-only) fails for options (Gamma effects). Doesn't capture extreme correlations (correlations spike during crises). Computational: Very fast. O(N²) for covariance matrix, O(N²) for portfolio variance. When to use: Daily risk management (fast updates). Linear portfolios (stocks, futures). Regulatory reporting (Basel requires parametric VaR). Not suitable for: Options portfolios, fat-tailed assets (crypto), crisis scenarios. Failure case: Long-Term Capital Management (1998): Parametric VaR assumed normal distributions. Actual losses 4+ standard deviations (should be impossible). Correlations broke down in crisis. (3) Monte Carlo Simulation: Methodology: Generate many (10K-1M) possible future scenarios. Simulate portfolio value in each scenario. VaR = percentile of simulated outcomes. Can incorporate complex dynamics: Mean reversion, volatility clustering (GARCH), stochastic volatility, path-dependent options. Advantages: Handles any distribution (fat tails, skewness). Models complex derivatives (path-dependent, multi-asset). Can incorporate dynamics (mean reversion, vol clustering). Flexible (add new risk factors easily). Disadvantages: Slow (10K+ simulations). Can take minutes for complex portfolios. Requires calibration (which distributions, parameters?). Garbage in, garbage out. Model risk: Wrong model → wrong VaR. Still based on assumptions (just more flexible ones). Computational: Slow. 10K simulations × portfolio valuation. Can parallelize (GPU acceleration). When to use: Complex portfolios (exotic options, structured products). Risk factor modeling (stress testing specific scenarios). Internal risk models (more flexibility than regulatory). Failure case: Assumes independence that doesn't hold. Example: Mortgage-backed securities (2008): Assumed low default correlation. In crisis, all mortgages defaulted together. VaR massively underestimated. (4) Why regulators require multiple methods: No single method perfect. Historical: Captures actual events but backward-looking. Parametric: Fast but oversimplifies. Monte Carlo: Flexible but model-dependent. Triangulation: If all three methods agree → confident in VaR estimate. If disagree → investigate why, use most conservative. Example: Historical VaR = $50K, Parametric = $30K, Monte Carlo = $70K. Large spread suggests portfolio has non-linear risk (options). Use $70K (most conservative). Regulatory requirements (Basel III): Banks must use 99% VaR, 10-day horizon. Must backtest: Compare VaR forecast to actual losses. If more than 4 exceedances in 250 days → model failed. Internal models: Can use any method but must demonstrate accuracy. Best practice: Use all three, understand differences, use most conservative for risk limits. Stress testing beyond VaR: VaR doesn't cover extreme tail events. Stress tests required: What if 2008 repeats? What if top 3 positions go to zero? Example: 95% VaR = $100K means 5% chance of worse loss. But how much worse? CVaR answers this (expected loss in worst 5%).",
    keyPoints: [
      'Historical: actual returns, no assumptions, fails for unprecedented events (COVID), O(N log N)',
      'Parametric: assumes normal distribution, fast, underestimates tails, fails for options/crises',
      'Monte Carlo: flexible, handles complex derivatives, slow (10K+ sims), model-dependent',
      'Regulators require multiple methods: triangulation, no single method perfect, backtesting required',
      'All VaR methods underestimate tail risk—supplement with stress testing and CVaR',
    ],
  },
  {
    id: 'drs-q-3',
    question:
      'Design a risk limit enforcement system that prevents catastrophic losses while allowing normal trading. Address: (1) hierarchy of limits (trader, desk, firm-wide), (2) types of limits (position size, notional, Greeks, VaR, max loss), (3) soft vs hard limits with actions at each level, (4) pre-trade vs post-trade checks, (5) handling limit breaches (automatic risk reduction, notifications, kill switches). Include specific thresholds and response times.',
    sampleAnswer:
      "Risk limit enforcement system: (1) Hierarchy of limits: Three levels with aggregation: Trader level: Individual trader limits. Example: Max $10M notional, Max 500 Delta, Max 1000 shares per position. Desk level: Sum of all traders on desk. Example: Max $100M notional, Max 5000 Delta, Max loss $50K/day. Firm-wide: Sum of all desks. Example: Max $1B notional, Max 50K Delta, Max loss $1M/day, 99% VaR < $10M. Aggregation: Changes at trader level propagate up. If trader increases position, check: Does trader exceed their limit? Does desk exceed their limit? Does firm exceed firm-wide limit? Block if any level breached. (2) Types of limits: Position size: Max shares per symbol. Example: Max 5000 shares AAPL. Prevents over-concentration. Notional exposure: Max dollar value. Example: Max $1M per position. Accounts for price differences (1000 shares @ $1000 = $1M, same as 10000 @ $100). Greeks: For options portfolios. Max |Delta| = 10,000 (portfolio moves $10K per $1 underlying move). Max |Gamma| = 500 (delta sensitivity). Max |Vega| = 50,000 (volatility sensitivity). Prevents excessive directional or volatility risk. VaR: Max 1-day 95% VaR = $100K. Limit maximum expected loss. Max Loss (daily): Max loss in single day = $50K. Circuit breaker: If hit, cease trading for day. Max Drawdown: Max peak-to-trough loss = 20% of capital. If breached, reduce risk immediately. Leverage: Max leverage = 4× capital. Total notional / equity ≤ 4. (3) Soft vs hard limits with actions: Soft limit (80% of hard limit): Action: Warning notification to trader and risk manager. Email/Slack alert with current values. Trader can continue but monitored closely. Rationale: Allows flexibility for legitimate trading opportunities. Example: Position limit 1000 shares. Soft = 800. At 850: Warning, can still trade. Hard limit (100%): Action: Block new orders that would increase limit utilization. Can only reduce risk (close positions). Notifications: Immediate alert to trader, risk manager, CTO. Rationale: Absolute maximum, cannot exceed without explicit override. Example: At 1000 shares: Block new buys. Can only sell. Ultra-hard limit (kill switch): Triggered by: Max daily loss exceeded, multiple hard limit breaches, system anomaly detected (runaway algorithm). Action: Immediate cessation of all trading. Cancel all open orders. Close positions at market (if configured). Requires manual intervention to resume. Response time: <1 second from detection to blocking. (4) Pre-trade vs post-trade checks: Pre-trade checks (before order submission): Check if new order would breach limits. Hypothetical position = current position + order quantity. Calculate: Projected notional, Greeks, VaR. If projected values exceed hard limit → reject order immediately. Latency critical: <1ms check. Use in-memory calculations. Must be synchronous (block order until check complete). Post-trade checks (after execution): Verify actual fill didn't breach limits (should be impossible if pre-trade correct). Recalculate all risk metrics with new position. Update dashboard with new utilization. Asynchronous (doesn't block trading). Can take 10-100ms. Why both: Pre-trade prevents breaches. Post-trade verifies and updates monitoring. Example: Order 100 shares AAPL. Pre-trade: Check if position would exceed 1000 limit. Current = 950 → projected = 1050 → REJECT. Post-trade: After execution, recalculate portfolio VaR with new position. (5) Handling limit breaches: Automatic risk reduction: Triggered when hard limit breached (shouldn't happen if pre-trade works, but failsafe). Action: Close most risky positions (highest VaR contribution) until back below limit. Example: VaR limit = $100K, current = $120K. Close positions contributing most to VaR until VaR < $100K. Close in order: Highest volatility first, smallest position size (easier to exit). Notifications: Immediate: PagerDuty alert to risk manager, CTO, CEO (for firm-wide breaches). Slack message to team. Dashboard: Red alert banner. Within 1 minute: Email summary with: What limit breached, current values, positions contributing most, actions taken. SMS to key personnel if no acknowledgment in 5 minutes. Kill switches: Manual: Big red button accessible to risk managers. Immediately stops all trading. Automatic: Triggered by: Daily loss > $500K (example threshold). Multiple simultaneous limit breaches (3+ hard limits). Latency spike (>100ms order routing suggests system issue). Unexpected P&L swing (>$100K in 1 minute without corresponding market move). Actions: Cancel all orders, Close all positions (optional, configurable), Disconnect from exchanges, Lock out all trading systems. Recovery: Requires explicit approval from CTO/CEO. Post-mortem required before resuming. Testing: Monthly kill switch drill. Verify all systems respond correctly. Response times: Pre-trade check: <1ms. Limit breach detection: <100ms. Notification: <1 second. Automatic risk reduction: <5 seconds. Kill switch activation: <1 second. Critical: Risk limits save firms. Knight Capital lost $440M in 45 minutes (2012). Proper limits would have stopped at $50M loss. Test limits regularly (fire drills). Better to be overly conservative than lose everything.",
    keyPoints: [
      'Hierarchy: trader/desk/firm-wide limits, aggregate up, block if any level breached',
      'Types: position size, notional, Greeks, VaR, max loss, leverage—multiple dimensions of risk',
      'Soft (80%): warning, can continue; Hard (100%): block new risk; Kill switch: stop all trading',
      'Pre-trade: synchronous check <1ms before order; Post-trade: async verification 10-100ms',
      'Breach handling: auto risk reduction, PagerDuty alerts <1s, kill switch for $500K+ loss, monthly drills',
    ],
  },
];
